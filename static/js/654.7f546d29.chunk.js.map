{"version":3,"file":"static/js/654.7f546d29.chunk.js","mappings":"4QAEaA,EAAYC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oEAMrBC,EAAiBH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kIAG1B,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAGZ,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,QAAQ,IACvC,SAAAJ,GAAC,OAAIA,EAAEC,MAAME,OAAOE,MAAM,I,SCZ1BC,EAAiB,SAAHC,GAAmB,IAAbC,EAAKD,EAALC,MACvBC,EAAiCD,EAAjCC,MAAOC,EAA0BF,EAA1BE,KAAMC,EAAoBH,EAApBG,GAAIC,EAAgBJ,EAAhBI,YACnBC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAACrB,EAAS,CAAAsB,UACRC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaT,GAAMU,MAAO,CAAEC,KAAMT,GAAWG,SAAA,CAClDJ,IACCG,EAAAA,EAAAA,KAAA,OACEQ,MAAO,CAAEC,OAAQ,IAAKC,MAAO,OAAQC,SAAU,UAC/CC,IAAG,mCAAAP,OAAqCR,GACxCgB,IAAKnB,IAGRA,IAASM,EAAAA,EAAAA,KAACjB,EAAc,CAAAkB,SAAEP,IAC1BC,IAAQK,EAAAA,EAAAA,KAACjB,EAAc,CAAAkB,SAAEN,QAIlC,ECpBamB,EAAYlC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uGCCrBiC,EAAiB,SAAHvB,GAAyB,IAAnBwB,EAAWxB,EAAXwB,YAC/B,OACEhB,EAAAA,EAAAA,KAACc,EAAS,CAAAb,SACPe,EAAYC,OAAS,GACpBD,EAAYE,KAAI,SAAAzB,GAAK,OACnBO,EAAAA,EAAAA,KAACT,EAAc,CAAgBE,MAAOA,GAAjBA,EAAMG,GAAoB,KAIzD,E,oBCuBA,EA/BiB,WACf,IAAAuB,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CH,EAAWK,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAkCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BR,EAAAA,EAAAA,WAAS,GAAMS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAkBtB,OAhBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,eAAAzC,GAAA0C,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGH,OAHGF,EAAAC,KAAA,EAEnBb,GAAa,GACbI,GAAS,GAAOQ,EAAAE,KAAA,GACUC,EAAAA,EAAAA,MAAsB,KAAD,EAAAL,EAAAE,EAAAI,KAAvCL,EAAOD,EAAPC,QACRf,EAAee,GAASC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,SAExBR,EAASQ,EAAAK,GAAMC,SAAS,QAEJ,OAFIN,EAAAC,KAAA,GAExBb,GAAa,GAAOY,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAX,EAAA,yBAEvB,kBAXmB,OAAA5C,EAAAwD,MAAA,KAAAC,UAAA,KAYpBhB,GACF,GAAG,KAGD/B,EAAAA,EAAAA,MAAAgD,EAAAA,SAAA,CAAAjD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAIQ,MAAO,CAAE2C,aAAc,GAAIC,UAAW,UAAWnD,SAAC,oBACrDyB,IAAa1B,EAAAA,EAAAA,KAAA,MAAAC,SAAI,kBACjB6B,IAAS5B,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,qBAAmB6B,KAChCd,EAAYC,OAAS,IAAKjB,EAAAA,EAAAA,KAACe,EAAc,CAACC,YAAaA,MAG9D,C","sources":["components/MovieTrendCard/MovieTrendCard.styled.js","components/MovieTrendCard/MovieTrendCard.js","components/MovieTrendList/MovieTrendList.styled.js","components/MovieTrendList/MovieTrendList.js","pages/HomePage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TrendCard = styled.li`\n  width: 216px;\n  height: 360px;\n  text-align: center;\n`;\n\nexport const TitleTrendCard = styled.h3`\n  font-weight: 600;\n  height: 70px;\n  padding: ${p => p.theme.spacing(3)};\n\n  &:hover {\n    background-color: ${p => p.theme.colors.burgundy};\n    color: ${p => p.theme.colors.orange};\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { TitleTrendCard, TrendCard } from './MovieTrendCard.styled';\n\nexport const MovieTrendCard = ({ movie }) => {\n  const { title, name, id, poster_path } = movie;\n  const location = useLocation();\n\n  return (\n    <TrendCard>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        {poster_path && (\n          <img\n            style={{ height: 306, width: '100%', overflow: 'hidden' }}\n            src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n            alt={title}\n          />\n        )}\n        {title && <TitleTrendCard>{title}</TitleTrendCard>}\n        {name && <TitleTrendCard>{name}</TitleTrendCard>}\n      </Link>\n    </TrendCard>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TrendList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n","import { MovieTrendCard } from 'components/MovieTrendCard/MovieTrendCard';\nimport { TrendList } from './MovieTrendList.styled';\n\nexport const MovieTrendList = ({ moviesTrend }) => {\n  return (\n    <TrendList>\n      {moviesTrend.length > 0 &&\n        moviesTrend.map(movie => (\n          <MovieTrendCard key={movie.id} movie={movie} />\n        ))}\n    </TrendList>\n  );\n};\n","import { MovieTrendList } from 'components/MovieTrendList/MovieTrendList';\nimport { fetchTrendingMovies } from 'components/axiosMovies';\nimport { useEffect, useState } from 'react';\n\nconst HomePage = () => {\n  const [moviesTrend, setMoviesTrend] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const getTrendMovies = async () => {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const { results } = await fetchTrendingMovies();\n        setMoviesTrend(results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getTrendMovies();\n  }, []);\n\n  return (\n    <>\n      <h1 style={{ marginBottom: 20, textAlign: 'center' }}> Trending today</h1>\n      {isLoading && <h2>LOADING......</h2>}\n      {error && <h2>Sorry. Not found. {error}</h2>}\n      {moviesTrend.length > 0 && <MovieTrendList moviesTrend={moviesTrend} />}\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["TrendCard","styled","_templateObject","_taggedTemplateLiteral","TitleTrendCard","_templateObject2","p","theme","spacing","colors","burgundy","orange","MovieTrendCard","_ref","movie","title","name","id","poster_path","location","useLocation","_jsx","children","_jsxs","Link","to","concat","state","from","style","height","width","overflow","src","alt","TrendList","MovieTrendList","moviesTrend","length","map","_useState","useState","_useState2","_slicedToArray","setMoviesTrend","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","getTrendMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchTrendingM","results","_context","prev","next","fetchTrendingMovies","sent","t0","message","finish","stop","apply","arguments","_Fragment","marginBottom","textAlign"],"sourceRoot":""}