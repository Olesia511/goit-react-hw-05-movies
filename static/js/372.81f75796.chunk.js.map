{"version":3,"file":"static/js/372.81f75796.chunk.js","mappings":"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","sources":["pages/MovieDetailsPage/MovieDetailsPage.styled.js","pages/MovieDetailsPage/MovieDetailsPage.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BackLink = styled(NavLink)`\n  font-weight: 900;\n  color: ${p => p.theme.colors.orange};\n  padding: 12px 20px;\n  height: 60px;\n  border-radius: 8px;\n\n  &:hover {\n    background-color: ${p => p.theme.colors.burgundy};\n  }\n`;\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  background-color: ${p => p.theme.colors.brown};\n  color: ${p => p.theme.colors.burgundy};\n  line-height: 1.5;\n  letter-spacing: 0.1em;\n`;\n\nexport const MovieData = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin-left: 20px;\n  margin-right: 20px;\n`;\n\nexport const MovieCastContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  align-items: center;\n  font-weight: 700;\n  color: ${p => p.theme.colors.orange};\n  margin-top: 20px;\n  margin-bottom: 20px;\n  gap: 20px;\n  height: 44px;\n  border-radius: 8px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  font-weight: 700;\n  color: ${p => p.theme.colors.orange};\n  padding: 12px 20px;\n  height: 60px;\n  border-radius: 8px;\n\n  &:hover {\n    background-color: ${p => p.theme.colors.burgundy};\n  }\n`;\n","import { fetchMovieDetails } from 'components/axiosMovies';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport {\n  BackLink,\n  CastList,\n  MovieCastContainer,\n  MovieContainer,\n  MovieData,\n  StyledLink,\n} from './MovieDetailsPage.styled';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const location = useLocation();\n  const backLink = useRef(location);\n\n  const id = useParams();\n\n  useEffect(() => {\n    const { movieId } = id;\n\n    if (!movieId) {\n      return;\n    }\n\n    const getMovie = async id => {\n      try {\n        setIsLoading(true);\n        setError(false);\n\n        const resp = await fetchMovieDetails(id);\n        setMovie(resp);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovie(movieId);\n  }, [id]);\n\n  const Genres = () => {\n    const { genres } = movie;\n\n    if (genres.length > 0) {\n      return genres.map(({ id, name }) => (\n        <span key={id}> {name.toLowerCase()}, </span>\n      ));\n    }\n  };\n\n  const { title, overview, poster_path, release_date, vote_average } = movie;\n\n  return (\n    <div>\n      <div style={{ height: 44 }}>\n        <BackLink to={backLink.current.state?.from ?? '/'}>\n          <AiOutlineArrowLeft /> GO BACK\n        </BackLink>\n      </div>\n\n      {isLoading && <h2>LOADING......</h2>}\n      {error && <h2>Sorry. Not found. {error}</h2>}\n      <MovieContainer>\n        {poster_path && (\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n            alt={title}\n          />\n        )}\n        <MovieData>\n          {title && (\n            <h2\n              style={{ textAlign: 'center', marginTop: 20, marginBottom: 20 }}\n            >\n              {title} ({release_date && release_date.split('-')[0]})\n            </h2>\n          )}\n\n          {overview && (\n            <div>\n              <h3>Overview:</h3>\n              <p>{overview}</p>\n            </div>\n          )}\n\n          {movie.genres?.length > 0 && (\n            <div>\n              <h4>Genres:</h4>\n              <p>{<Genres />}</p>\n            </div>\n          )}\n\n          {vote_average > 0 && (\n            <div>\n              <h4>Vote average: </h4>\n              <p> {vote_average.toFixed(2)}</p>\n            </div>\n          )}\n        </MovieData>\n      </MovieContainer>\n      <MovieCastContainer>\n        <CastList>\n          <li>\n            <StyledLink to=\"cast\"> Cast </StyledLink>\n          </li>\n          <li>\n            <StyledLink to=\"reviews\"> Reviews </StyledLink>\n          </li>\n        </CastList>\n        <Outlet />\n      </MovieCastContainer>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["BackLink","styled","NavLink","_templateObject","_taggedTemplateLiteral","p","theme","colors","orange","burgundy","MovieContainer","_templateObject2","brown","MovieData","_templateObject3","MovieCastContainer","_templateObject4","CastList","_templateObject5","StyledLink","_templateObject6","_backLink$current$sta","_backLink$current$sta2","_movie$genres","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","location","useLocation","backLink","useRef","id","useParams","useEffect","movieId","getMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","resp","_context","prev","next","fetchMovieDetails","sent","t0","message","finish","stop","_x","apply","arguments","Genres","genres","length","map","_ref2","name","_jsxs","children","toLowerCase","title","overview","poster_path","release_date","vote_average","_jsx","style","height","to","current","state","from","AiOutlineArrowLeft","src","concat","alt","textAlign","marginTop","marginBottom","split","toFixed","Outlet"],"sourceRoot":""}