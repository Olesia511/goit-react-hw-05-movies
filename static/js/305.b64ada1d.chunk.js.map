{"version":3,"file":"static/js/305.b64ada1d.chunk.js","mappings":"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","sources":["components/axiosMovies.js","pages/MovieDetailsPage.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  params: { language: 'en-US', include_adult: 'false' },\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1YzU3NmRiNDgzNWY0OGQ0NzRjYmJlMWI2NzljYzkxYiIsInN1YiI6IjY1NjdhNmVmMDIxY2VlMDBhZGE3NjJhNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ZIko6K1dE3w2QDn32RkQejmfYQKYjH36wuVYS4ZVQHw',\n  },\n};\n\n// ===========    список найпопулярніших фільмів на сьогодні\n\nexport const fetchTrendingMovies = async () => {\n  const resp = await axios.get(`trending/all/day`, options);\n  return resp.data;\n};\n\n// ===========    запит повної інформації про фільм по id\n\nexport const fetchMovieDetails = async id => {\n  const resp = await axios.get(`/movie/${id}`, options);\n  return resp.data;\n};\n\n// ============== запит інформації про акторський склад фільму\n\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// 'https://api.themoviedb.org/3/ movie/268/credits ?language=en-US'\n// const query = `/movie/ 268/ credits`  ;\n\n// ======================        запит оглядів фільму\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n// 'https://api.themoviedb.org/3  /movie/268/reviews ?language=en-US  &page=1'\n// const query = `/movie/ 268 / reviews     ?page=1`;\n\n//  ===============    пошук фільму за ключовим словом\n\n// https://api.themoviedb.org/3/search/movie?api_key=5c576db4835f48d474cbbe1b679cc91b&query=batman\n\nexport const fetchMovieByName = async value => {\n  const resp = await axios.get(`/search/movie?query=${value} `, options);\n  return resp.data;\n};\n","import { fetchMovieDetails } from 'components/axiosMovies';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const location = useLocation();\n  const backLink = useRef(location);\n\n  const idMovie = useParams();\n\n  useEffect(() => {\n    if (!idMovie.movieId) {\n      return;\n    }\n\n    getMovie(idMovie.movieId);\n  }, [idMovie.movieId]);\n\n  const getMovie = async id => {\n    try {\n      setIsLoading(true);\n      setError(false);\n\n      const resp = await fetchMovieDetails(id);\n      setMovie({ ...resp });\n    } catch (error) {\n      console.log(`Catch error message`, error.message);\n      setError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const Genres = () => {\n    const { genres } = movie;\n\n    if (genres.length > 0) {\n      return genres.map(({ id, name }) => <span key={id}> {name} </span>);\n    }\n  };\n\n  const { title, overview, poster_path, release_date, vote_average } = movie;\n\n  return (\n    <div>\n      <h1>MovieDetails </h1>\n      <Link to={backLink.current.state?.from ?? '/'}>Back to Home </Link>\n      {isLoading && <h2>LOADING......</h2>}\n      {error && <h2>ERROR ...</h2>}\n      <div>\n        {title && (\n          <h2>\n            {title} ({release_date && release_date.split('-')[0]})\n          </h2>\n        )}\n\n        {vote_average > 0 && <p> Vote average {vote_average.toFixed()}⭐</p>}\n        {poster_path && (\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n            alt={title}\n          />\n        )}\n\n        {overview && <p>Overview: {overview}</p>}\n\n        {movie.genres?.length > 0 && <div>Genres: {<Genres />}</div>}\n      </div>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"cast\"> Cast </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\"> Reviews </Link>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["axios","options","params","language","include_adult","headers","accept","Authorization","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","resp","_context","prev","next","sent","abrupt","data","stop","apply","arguments","fetchMovieDetails","_ref2","_callee2","id","_context2","concat","_x","_backLink$current$sta","_backLink$current$sta2","_movie$genres","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","location","useLocation","backLink","useRef","idMovie","useParams","useEffect","movieId","getMovie","_objectSpread","t0","console","log","message","finish","Genres","genres","length","map","name","_jsxs","children","title","overview","poster_path","release_date","vote_average","_jsx","Link","to","current","state","from","split","toFixed","src","alt","Outlet"],"sourceRoot":""}