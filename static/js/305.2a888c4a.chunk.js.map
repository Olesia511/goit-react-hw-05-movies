{"version":3,"file":"static/js/305.2a888c4a.chunk.js","mappings":"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","sources":["pages/MovieDetailsPage.js"],"sourcesContent":["import { fetchMovieDetails } from 'components/axiosMovies';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const location = useLocation();\n  const backLink = useRef(location);\n\n  const id = useParams();\n\n  useEffect(() => {\n    const { movieId } = id;\n\n    if (!movieId) {\n      return;\n    }\n\n    const getMovie = async id => {\n      try {\n        setIsLoading(true);\n        setError(false);\n\n        const resp = await fetchMovieDetails(id);\n        setMovie({ ...resp });\n      } catch (error) {\n        console.log(`Catch error message`, error.message);\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovie(movieId);\n  }, [id]);\n\n  const Genres = () => {\n    const { genres } = movie;\n\n    if (genres.length > 0) {\n      return genres.map(({ id, name }) => <span key={id}> {name} </span>);\n    }\n  };\n\n  const { title, overview, poster_path, release_date, vote_average } = movie;\n\n  return (\n    <div>\n      <h1>MovieDetails </h1>\n      <Link to={backLink.current.state?.from ?? '/'}>Back to Home </Link>\n      {isLoading && <h2>LOADING......</h2>}\n      {error && <h2>Sorry. {error.message}.</h2>}\n      <div>\n        {title && (\n          <h2>\n            {title} ({release_date && release_date.split('-')[0]})\n          </h2>\n        )}\n\n        {vote_average > 0 && <p> Vote average: {vote_average.toFixed(2)}</p>}\n        {poster_path && (\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n            alt={title}\n          />\n        )}\n\n        {overview && <p>Overview: {overview}</p>}\n\n        {movie.genres?.length > 0 && <div>Genres: {<Genres />}</div>}\n      </div>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"cast\"> Cast </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\"> Reviews </Link>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["_backLink$current$sta","_backLink$current$sta2","_movie$genres","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","location","useLocation","backLink","useRef","id","useParams","useEffect","movieId","getMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","resp","_context","prev","next","fetchMovieDetails","sent","_objectSpread","t0","console","log","message","finish","stop","_x","apply","arguments","Genres","genres","length","map","_ref2","name","_jsxs","children","title","overview","poster_path","release_date","vote_average","_jsx","Link","to","current","state","from","split","toFixed","src","concat","alt","Outlet"],"sourceRoot":""}