{"version":3,"file":"static/js/206.9d4c7d1d.chunk.js","mappings":"0OAuDA,UAlDiB,WACf,IAAAA,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEhBG,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRC,GACF,GAAG,IAEH,IAAMA,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGH,OAHGF,EAAAC,KAAA,EAEnBhB,GAAa,GACbI,GAAS,GAAOW,EAAAE,KAAA,GACUC,EAAAA,EAAAA,MAAsB,KAAD,EAAAL,EAAAE,EAAAI,KAAvCL,EAAOD,EAAPC,QACRlB,GAAcwB,EAAAA,EAAAA,GAAKN,IAAUC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAE7BO,QAAQC,IAAI,sBAAuBR,EAAAM,GAAMG,SACzCpB,GAAS,GAAM,QAEK,OAFLW,EAAAC,KAAA,GAEfhB,GAAa,GAAOe,EAAAU,OAAA,6BAAAV,EAAAW,OAAA,GAAAd,EAAA,yBAEvB,kBAZmB,OAAAH,EAAAkB,MAAA,KAAAC,UAAA,KAcdC,EAAiB,WAAH,OAClBlC,EAAYmC,KAAI,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAOC,EAAIF,EAAJE,KAAMC,EAAEH,EAAFG,GAAIC,EAAWJ,EAAXI,YAAW,OAC7CC,EAAAA,EAAAA,KAAA,MAAAC,UACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaP,GAAMQ,MAAO,CAAEC,KAAMtC,GAAWgC,SAAA,CAC7C,OAALL,QAAK,IAALA,EAAAA,EAASC,EACTE,IACCC,EAAAA,EAAAA,KAAA,OACEQ,IAAG,mCAAAH,OAAqCN,GACxCU,IAAKb,QANJE,EAUJ,GACJ,EAEL,OACEI,EAAAA,EAAAA,MAAAQ,EAAAA,SAAA,CAAAT,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,oBACHtC,IAAaqC,EAAAA,EAAAA,KAAA,MAAAC,SAAI,kBACjBlC,IAASmC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,qBAAmBlC,EAAMqB,WACtC7B,EAAYoD,OAAS,IAAKT,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,KAAED,EAAAA,EAAAA,KAACP,EAAc,SAGtD,C","sources":["pages/HomePage.js"],"sourcesContent":["import { fetchTrendingMovies } from 'components/axiosMovies';\n\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst HomePage = () => {\n  const [moviesTrend, setMoviesTrend] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    getTrendMovies();\n  }, []);\n\n  const getTrendMovies = async () => {\n    try {\n      setIsLoading(true);\n      setError(false);\n      const { results } = await fetchTrendingMovies();\n      setMoviesTrend([...results]);\n    } catch (error) {\n      console.log(`Catch error message`, error.message);\n      setError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const ArrMoviesTrend = () =>\n    moviesTrend.map(({ title, name, id, poster_path }) => (\n      <li key={id}>\n        <Link to={`/movies/${id}`} state={{ from: location }}>\n          {title ?? name}\n          {poster_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n              alt={title}\n            />\n          )}\n        </Link>\n      </li>\n    ));\n\n  return (\n    <>\n      <h1> Trending today</h1>\n      {isLoading && <h2>LOADING......</h2>}\n      {error && <h2>Sorry. Not found. {error.message}</h2>}\n      {moviesTrend.length > 0 && <ul> {<ArrMoviesTrend />}</ul>}\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["_useState","useState","_useState2","_slicedToArray","moviesTrend","setMoviesTrend","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","location","useLocation","useEffect","getTrendMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchTrendingM","results","_context","prev","next","fetchTrendingMovies","sent","_toConsumableArray","t0","console","log","message","finish","stop","apply","arguments","ArrMoviesTrend","map","_ref2","title","name","id","poster_path","_jsx","children","_jsxs","Link","to","concat","state","from","src","alt","_Fragment","length"],"sourceRoot":""}